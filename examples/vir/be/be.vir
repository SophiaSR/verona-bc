lib
  @printval = "printval"(dyn): none

class @make_cown_bool
  @val: bool
  @apply @make_cown_bool_apply

func @make_cown_bool_apply($self: @make_cown_bool): bool
  $val_ref = ref $self @val
  $r = load $val_ref
  ret $r

class @make_cown_i32
  @val: i32
  @apply @make_cown_i32_apply

func @make_cown_i32_apply($self: @make_cown_i32): i32
  $val_ref = ref $self @val
  $r = load $val_ref
  ret $r

class @behavior1
  @a: i32
  @apply @behavior1_apply

func @behavior1_apply(
  $self: @behavior1, $cown1_v: ref bool, $cown2_v: ref i32): i32
  $a_ref = ref $self @a
  $a = load $a_ref
  $prev = load $cown1_v
  $next = not $prev
  $0 = store $cown1_v $next
  $1 = ffi @printval($prev)
  $2 = ffi @printval($next)
  $b = load $cown2_v
  $c = add $a $b
  ret $c

class @behavior2
  @apply @behavior2_apply

func @behavior2_apply($self: @behavior2, $promise_v: ref i32): none
  $a = load $promise_v
  $_ = ffi @printval($a)
  ret $_

func @main(): i32
  $bool = const bool true
  $make_cown_bool = region arena @make_cown_bool($bool)
  $cown1 = when() $make_cown_bool
  $i32 = const i32 42
  $make_cown_i32 = region arena @make_cown_i32($i32)
  $cown2 = when() $make_cown_i32
  $ro_cown2 = read $cown2
  $b1 = region arena @behavior1($i32)
  $promise = when($cown1, $ro_cown2) $b1
  $ro_promise = read $promise
  $b2 = region arena @behavior2()
  $_ = when ($ro_promise) $b2
  $zero = const i32 0
  ret $zero
